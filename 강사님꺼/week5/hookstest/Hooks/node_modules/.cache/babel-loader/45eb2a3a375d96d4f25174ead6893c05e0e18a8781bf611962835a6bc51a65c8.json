{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmddy\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uACF5\\uBD80\\uD558\\uAE30\\\\\\uCF54\\uB4DC\\uD14C\\uC2A4\\uD2B8\\\\\\uAC15\\uC0AC\\uB2D8\\uAEBC\\\\week5\\\\hookstest\\\\Hooks\\\\src\\\\hooks\\\\1.basic\\\\q1.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q1() {\n  _s();\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n      1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n          만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n        \r\n      1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n          button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n          반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n    */\n  const [inputValue, setInputValue] = useState(\"\");\n  const [messageColor, setMessageColor] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n  const handleButtonClick = () => {\n    setIsVisible(!isVisible);\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n    if (value === \"\") {\n      setMessageColor(\"\");\n    } else if (value === e.target.placeholder) {\n      setMessageColor(\"green\");\n    } else {\n      setMessageColor(\"red\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"김성용\",\n        style: {\n          textAlign: \"center\"\n        },\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Message, {\n        color: messageColor,\n        children: [\" \", messageColor === \"green\" ? \"올바르게 입력하셨습니다\" : \"올바르게 글을 작성해주세요\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-2. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        children: isVisible ? \"숨기기\" : \"보이기\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), isVisible && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\uC774 \\uBB38\\uAD6C\\uB294 \\uBCF4\\uC774\\uAE30 \\uC0C1\\uD0DC\\uC77C \\uB54C\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Q1, \"qksfXsfNq7LKoXBN3OLSvbuarNo=\");\n_c = Q1;\nexport default Q1;\nconst Message = styled.p`\n  color: ${props => props.color};\n`;\nconst S = {\n  Message\n};\nvar _c;\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"names":["useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Q1","_s","inputValue","setInputValue","messageColor","setMessageColor","isVisible","setIsVisible","handleButtonClick","handleInputChange","e","value","target","placeholder","children","fileName","_jsxFileName","lineNumber","columnNumber","type","style","textAlign","onChange","S","Message","color","onClick","_c","p","props","$RefreshReg$"],"sources":["C:/Users/tmddy/OneDrive/바탕 화면/공부하기/코드테스트/강사님꺼/week5/hookstest/Hooks/src/hooks/1.basic/q1.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Q1() {\r\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n\r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n        \r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [messageColor, setMessageColor] = useState(\"\");\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const handleButtonClick = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputValue(value);\r\n    if (value === \"\") {\r\n      setMessageColor(\"\");\r\n    } else if (value === e.target.placeholder) {\r\n      setMessageColor(\"green\");\r\n    } else {\r\n      setMessageColor(\"red\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      <div>\r\n        <h2>문제1-1.</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\"김성용\"}\r\n          style={{ textAlign: \"center\" }}\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n        />\r\n        <S.Message color={messageColor}>\r\n          {\" \"}\r\n          {messageColor === \"green\"\r\n            ? \"올바르게 입력하셨습니다\"\r\n            : \"올바르게 글을 작성해주세요\"}\r\n        </S.Message>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>문제1-2. </h2>\r\n        <button onClick={handleButtonClick}>\r\n          {isVisible ? \"숨기기\" : \"보이기\"}\r\n        </button>\r\n        {isVisible && <p> 이 문구는 보이기 상태일 때만 볼 수 있습니다 </p>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Q1;\r\n\r\nconst Message = styled.p`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst S = {\r\n  Message,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}